{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\location-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, useCallback, createContext, useContext } from 'react';\nimport { GoogleMap, useLoadScript, InfoWindow, Marker } from '@react-google-maps/api';\nimport { createBrowserRouter, RouterProvider, Link } from 'react-router-dom';\nimport ProfilePage from './components/ProfilePage';\nimport MapErrorBoundary from './components/MapErrorBoundary';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LIBRARIES = ['places'];\n\n// Create a context for Google Maps\nconst GoogleMapsContext = /*#__PURE__*/createContext(null);\nfunction GoogleMapsProvider({\n  children\n}) {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: LIBRARIES\n  });\n  if (loadError) {\n    console.error('Error loading maps:', loadError);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading maps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n}\n_s(GoogleMapsProvider, \"Cye17iwlLw61yP2k5hqy29yMy+o=\", false, function () {\n  return [useLoadScript];\n});\n_c = GoogleMapsProvider;\nfunction App() {\n  _s2();\n  var _selectedMarker$conte;\n  const [user, setUser] = useState(() => {\n    // Check localStorage for user data when app initializes\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [locationData, setLocationData] = useState([]);\n  const [contentForm, setContentForm] = useState({\n    text: '',\n    media: []\n  });\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [map, setMap] = useState(null);\n  const [mapCenter] = useState({\n    lat: 40.7128,\n    lng: -74.0060\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [mapsError, setMapsError] = useState(null);\n  const [error, setError] = useState(null);\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n\n  // Fetch locations when user changes\n  useEffect(() => {\n    if (user) {\n      fetchLocations();\n    }\n  }, [user]);\n  const handleAuth = async e => {\n    e.preventDefault();\n    const endpoint = isRegistering ? '/api/auth/register' : '/api/auth/login';\n    try {\n      const response = await fetch(`http://localhost:3000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        if (!isRegistering) {\n          const userData = {\n            email: data.user.email,\n            userId: data.user._id.toString()\n          };\n          localStorage.setItem('token', data.token);\n          localStorage.setItem('user', JSON.stringify(userData)); // Save user data\n          setUser(userData);\n          console.log('Login successful!');\n        } else {\n          setIsRegistering(false);\n          alert('Registration successful! Please login.');\n        }\n      } else {\n        alert(data.error || 'Authentication failed');\n      }\n    } catch (error) {\n      console.error('Auth error:', error);\n      alert('Authentication failed');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user'); // Remove user data\n    setUser(null);\n  };\n  const handleMapClick = event => {\n    if (!user) return;\n\n    // Only set selectedLocation if we're clicking on the map (not a marker)\n    if (!event.placeId) {\n      const clickedLat = event.latLng.lat();\n      const clickedLng = event.latLng.lng();\n      setSelectedLocation({\n        lat: clickedLat,\n        lng: clickedLng\n      });\n      setSelectedMarker(null); // Close any open marker info windows\n    }\n  };\n  const handleMarkerClick = location => {\n    console.log(\"Marker clicked:\", location); // Debug log\n    setSelectedMarker(location);\n    setSelectedLocation(null); // Close any new location form\n  };\n  const handleLocationSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('latitude', selectedLocation.lat);\n      formData.append('longitude', selectedLocation.lng);\n      formData.append('text', contentForm.text);\n\n      // Append each media file\n      if (contentForm.media) {\n        contentForm.media.forEach(file => {\n          formData.append('media', file);\n        });\n      }\n      console.log('Submitting location with data:', {\n        lat: selectedLocation.lat,\n        lng: selectedLocation.lng,\n        text: contentForm.text,\n        mediaCount: contentForm.media.length\n      });\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:3000/api/user/locations', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      const responseData = await response.json();\n      console.log('Server response:', responseData);\n      if (!response.ok) {\n        throw new Error(responseData.error || 'Failed to save location');\n      }\n\n      // Clear form and selected location\n      setContentForm({\n        text: '',\n        media: []\n      });\n      setSelectedLocation(null);\n      setSelectedMarker(null);\n\n      // Refresh locations\n      fetchLocations();\n    } catch (error) {\n      console.error('Error submitting location data:', error);\n      setError(error.message);\n    }\n  };\n  const fetchLocations = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Fetching locations with token:', (token === null || token === void 0 ? void 0 : token.substring(0, 20)) + '...');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      const response = await fetch('http://localhost:3000/api/user/locations', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Response status:', response.status);\n      console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Fetch error response:', errorText);\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Raw response data:', data);\n      if (Array.isArray(data)) {\n        console.log('Number of locations received:', data.length);\n        if (data.length > 0) {\n          console.log('First location:', JSON.stringify(data[0], null, 2));\n        } else {\n          console.log('No locations returned from API');\n        }\n        setLocationData(data);\n      } else {\n        console.error('Unexpected data format:', data);\n      }\n    } catch (error) {\n      console.error('Error in fetchLocations:', error);\n      // Don't rethrow the error, just log it\n    }\n  };\n  useEffect(() => {\n    console.log('LocationData updated:', locationData);\n  }, [locationData]);\n  const handleMapLoad = mapInstance => {\n    console.log('Map loaded successfully');\n    setMap(mapInstance);\n  };\n  const handleMapUnmount = () => {\n    try {\n      console.log('Map unmounting');\n      setMap(null);\n    } catch (error) {\n      console.error('Error unmounting map:', error);\n    }\n  };\n  const handleDeleteLocation = async locationId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:3000/api/locations/${locationId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        // Remove the deleted location from state\n        setLocationData(prevLocations => prevLocations.filter(loc => loc._id !== locationId));\n        setSelectedMarker(null);\n      } else {\n        console.error('Failed to delete location');\n      }\n    } catch (error) {\n      console.error('Error deleting location:', error);\n    }\n  };\n  const renderAuthForm = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: '40px auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegistering ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAuth,\n      children: [isRegistering && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.name,\n          onChange: e => setFormData({\n            ...formData,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isRegistering ? 'Register' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsRegistering(!isRegistering),\n        children: isRegistering ? 'Switch to Login' : 'Switch to Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n\n  // Only render the map when user is logged in\n  if (!user) {\n    return renderAuthForm();\n  }\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '10px',\n          right: '10px',\n          zIndex: 1,\n          display: 'flex',\n          gap: '10px',\n          background: 'white',\n          padding: '10px',\n          borderRadius: '5px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              padding: '8px 16px',\n              backgroundColor: '#4CAF50',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#f44336',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-container\",\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            mapContainerStyle: mapStyles,\n            zoom: 13,\n            center: mapCenter,\n            onClick: handleMapClick,\n            onLoad: handleMapLoad,\n            onUnmount: handleMapUnmount,\n            options: {\n              disableDefaultUI: true,\n              clickableIcons: false,\n              mapTypeControl: false,\n              fullscreenControl: false,\n              streetViewControl: false\n            },\n            children: [locationData.map(location => /*#__PURE__*/_jsxDEV(Marker, {\n              position: {\n                lat: location.location.coordinates[1],\n                lng: location.location.coordinates[0]\n              },\n              onClick: () => handleMarkerClick(location)\n            }, location._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this)), selectedLocation && !selectedMarker && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Marker, {\n                position: selectedLocation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(InfoWindow, {\n                position: selectedLocation,\n                onCloseClick: () => setSelectedLocation(null),\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleLocationSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: contentForm.text,\n                    onChange: e => setContentForm({\n                      ...contentForm,\n                      text: e.target.value\n                    }),\n                    placeholder: \"Enter location description\",\n                    style: {\n                      width: '100%',\n                      marginBottom: '10px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    multiple: true,\n                    accept: \"image/*,video/*\",\n                    onChange: e => setContentForm({\n                      ...contentForm,\n                      media: Array.from(e.target.files)\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    children: \"Save Location Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), selectedMarker && !selectedLocation && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: selectedMarker.location.coordinates[1],\n                lng: selectedMarker.location.coordinates[0]\n              },\n              onCloseClick: () => setSelectedMarker(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: selectedMarker.content.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 23\n                }, this), (_selectedMarker$conte = selectedMarker.content.mediaUrls) === null || _selectedMarker$conte === void 0 ? void 0 : _selectedMarker$conte.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost:3000/${url}`,\n                  alt: \"Location media\",\n                  style: {\n                    maxWidth: '200px',\n                    marginTop: '10px'\n                  }\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 25\n                }, this)), user && selectedMarker.creator._id === user.userId && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteLocation(selectedMarker._id),\n                  style: {\n                    marginTop: '10px'\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this)\n  }, {\n    path: \"/profile\",\n    element: /*#__PURE__*/_jsxDEV(ProfilePage, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 16\n    }, this)\n  }]);\n  console.log('States:', {\n    selectedMarker,\n    selectedLocation\n  });\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(GoogleMapsProvider, {\n      children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n        router: router\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"jAXGTdKv7kCVKLKemFMDqJIK3j4=\");\n_c2 = App;\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error('Map Error:', error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Something went wrong with the map. Please refresh the page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 14\n      }, this);\n    }\n    return this.props.children;\n  }\n}\nexport default function AppWithErrorBoundary() {\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 496,\n    columnNumber: 5\n  }, this);\n}\n_c3 = AppWithErrorBoundary;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GoogleMapsProvider\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"AppWithErrorBoundary\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","createContext","useContext","GoogleMap","useLoadScript","InfoWindow","Marker","createBrowserRouter","RouterProvider","Link","ProfilePage","MapErrorBoundary","jsxDEV","_jsxDEV","Fragment","_Fragment","LIBRARIES","GoogleMapsContext","GoogleMapsProvider","children","_s","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","console","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","_selectedMarker$conte","user","setUser","savedUser","localStorage","getItem","JSON","parse","isRegistering","setIsRegistering","formData","setFormData","email","password","name","selectedLocation","setSelectedLocation","locationData","setLocationData","contentForm","setContentForm","text","media","selectedMarker","setSelectedMarker","map","setMap","mapCenter","lat","lng","setIsLoaded","mapsError","setMapsError","setError","mapStyles","height","width","fetchLocations","handleAuth","e","preventDefault","endpoint","response","fetch","method","headers","body","stringify","data","json","ok","userData","userId","_id","toString","setItem","token","log","alert","handleLogout","removeItem","handleMapClick","event","placeId","clickedLat","latLng","clickedLng","handleMarkerClick","location","handleLocationSubmit","FormData","append","forEach","file","mediaCount","length","responseData","Error","message","substring","status","Object","fromEntries","entries","errorText","Array","isArray","handleMapLoad","mapInstance","handleMapUnmount","handleDeleteLocation","locationId","prevLocations","filter","loc","renderAuthForm","style","maxWidth","margin","padding","onSubmit","type","value","onChange","target","required","onClick","router","path","element","className","position","top","right","zIndex","display","gap","background","borderRadius","boxShadow","to","backgroundColor","color","border","cursor","mapContainerStyle","zoom","center","onLoad","onUnmount","options","disableDefaultUI","clickableIcons","mapTypeControl","fullscreenControl","streetViewControl","coordinates","onCloseClick","placeholder","marginBottom","multiple","accept","from","files","content","mediaUrls","url","index","src","alt","marginTop","creator","ErrorBoundary","_c2","Component","constructor","props","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","AppWithErrorBoundary","_c3","$RefreshReg$"],"sources":["C:/Users/Admin/location-app/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, useCallback, createContext, useContext } from 'react';\nimport { GoogleMap, useLoadScript, InfoWindow, Marker } from '@react-google-maps/api';\nimport { createBrowserRouter, RouterProvider, Link } from 'react-router-dom';\nimport ProfilePage from './components/ProfilePage';\nimport MapErrorBoundary from './components/MapErrorBoundary';\n\nconst LIBRARIES = ['places'];\n\n// Create a context for Google Maps\nconst GoogleMapsContext = createContext(null);\n\nfunction GoogleMapsProvider({ children }) {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: LIBRARIES,\n  });\n\n  if (loadError) {\n    console.error('Error loading maps:', loadError);\n    return <div>Error loading maps</div>;\n  }\n\n  if (!isLoaded) {\n    return <div>Loading maps...</div>;\n  }\n\n  return children;\n}\n\nfunction App() {\n  const [user, setUser] = useState(() => {\n    // Check localStorage for user data when app initializes\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [locationData, setLocationData] = useState([]);\n  const [contentForm, setContentForm] = useState({\n    text: '',\n    media: []\n  });\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [map, setMap] = useState(null);\n  const [mapCenter] = useState({\n    lat: 40.7128,\n    lng: -74.0060\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [mapsError, setMapsError] = useState(null);\n  const [error, setError] = useState(null);\n\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n\n  // Fetch locations when user changes\n  useEffect(() => {\n    if (user) {\n      fetchLocations();\n    }\n  }, [user]);\n\n  const handleAuth = async (e) => {\n    e.preventDefault();\n    const endpoint = isRegistering ? '/api/auth/register' : '/api/auth/login';\n    \n    try {\n      const response = await fetch(`http://localhost:3000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      \n      const data = await response.json();\n      \n      if (response.ok) {\n        if (!isRegistering) {\n          const userData = { \n            email: data.user.email,\n            userId: data.user._id.toString()\n          };\n          localStorage.setItem('token', data.token);\n          localStorage.setItem('user', JSON.stringify(userData)); // Save user data\n          setUser(userData);\n          console.log('Login successful!');\n        } else {\n          setIsRegistering(false);\n          alert('Registration successful! Please login.');\n        }\n      } else {\n        alert(data.error || 'Authentication failed');\n      }\n    } catch (error) {\n      console.error('Auth error:', error);\n      alert('Authentication failed');\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user'); // Remove user data\n    setUser(null);\n  };\n\n  const handleMapClick = (event) => {\n    if (!user) return;\n    \n    // Only set selectedLocation if we're clicking on the map (not a marker)\n    if (!event.placeId) {\n      const clickedLat = event.latLng.lat();\n      const clickedLng = event.latLng.lng();\n      \n      setSelectedLocation({\n        lat: clickedLat,\n        lng: clickedLng\n      });\n      setSelectedMarker(null); // Close any open marker info windows\n    }\n  };\n\n  const handleMarkerClick = (location) => {\n    console.log(\"Marker clicked:\", location); // Debug log\n    setSelectedMarker(location);\n    setSelectedLocation(null); // Close any new location form\n  };\n\n  const handleLocationSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const formData = new FormData();\n      formData.append('latitude', selectedLocation.lat);\n      formData.append('longitude', selectedLocation.lng);\n      formData.append('text', contentForm.text);\n      \n      // Append each media file\n      if (contentForm.media) {\n        contentForm.media.forEach(file => {\n          formData.append('media', file);\n        });\n      }\n\n      console.log('Submitting location with data:', {\n        lat: selectedLocation.lat,\n        lng: selectedLocation.lng,\n        text: contentForm.text,\n        mediaCount: contentForm.media.length\n      });\n\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:3000/api/user/locations', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n\n      const responseData = await response.json();\n      console.log('Server response:', responseData);\n\n      if (!response.ok) {\n        throw new Error(responseData.error || 'Failed to save location');\n      }\n\n      // Clear form and selected location\n      setContentForm({ text: '', media: [] });\n      setSelectedLocation(null);\n      setSelectedMarker(null);\n      \n      // Refresh locations\n      fetchLocations();\n      \n    } catch (error) {\n      console.error('Error submitting location data:', error);\n      setError(error.message);\n    }\n  };\n\n  const fetchLocations = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Fetching locations with token:', token?.substring(0, 20) + '...');\n\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n\n      const response = await fetch('http://localhost:3000/api/user/locations', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Response status:', response.status);\n      console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Fetch error response:', errorText);\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('Raw response data:', data);\n      \n      if (Array.isArray(data)) {\n        console.log('Number of locations received:', data.length);\n        if (data.length > 0) {\n          console.log('First location:', JSON.stringify(data[0], null, 2));\n        } else {\n          console.log('No locations returned from API');\n        }\n        setLocationData(data);\n      } else {\n        console.error('Unexpected data format:', data);\n      }\n    } catch (error) {\n      console.error('Error in fetchLocations:', error);\n      // Don't rethrow the error, just log it\n    }\n  };\n\n  useEffect(() => {\n    console.log('LocationData updated:', locationData);\n  }, [locationData]);\n\n  const handleMapLoad = (mapInstance) => {\n    console.log('Map loaded successfully');\n    setMap(mapInstance);\n  };\n\n  const handleMapUnmount = () => {\n    try {\n      console.log('Map unmounting');\n      setMap(null);\n    } catch (error) {\n      console.error('Error unmounting map:', error);\n    }\n  };\n\n  const handleDeleteLocation = async (locationId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:3000/api/locations/${locationId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        // Remove the deleted location from state\n        setLocationData(prevLocations => \n          prevLocations.filter(loc => loc._id !== locationId)\n        );\n        setSelectedMarker(null);\n      } else {\n        console.error('Failed to delete location');\n      }\n    } catch (error) {\n      console.error('Error deleting location:', error);\n    }\n  };\n\n  const renderAuthForm = () => (\n    <div style={{ maxWidth: '400px', margin: '40px auto', padding: '20px' }}>\n      <h2>{isRegistering ? 'Register' : 'Login'}</h2>\n      <form onSubmit={handleAuth}>\n        {isRegistering && (\n          <div>\n            <label>Name:</label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={(e) => setFormData({...formData, name: e.target.value})}\n              required\n            />\n          </div>\n        )}\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={formData.email}\n            onChange={(e) => setFormData({...formData, email: e.target.value})}\n            required\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={formData.password}\n            onChange={(e) => setFormData({...formData, password: e.target.value})}\n            required\n          />\n        </div>\n        <button type=\"submit\">{isRegistering ? 'Register' : 'Login'}</button>\n        <button type=\"button\" onClick={() => setIsRegistering(!isRegistering)}>\n          {isRegistering ? 'Switch to Login' : 'Switch to Register'}\n        </button>\n      </form>\n    </div>\n  );\n\n  // Only render the map when user is logged in\n  if (!user) {\n    return renderAuthForm();\n  }\n\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: (\n        <div className=\"app\">\n          <div style={{ \n            position: 'absolute', \n            top: '10px', \n            right: '10px', \n            zIndex: 1,\n            display: 'flex',\n            gap: '10px',\n            background: 'white',\n            padding: '10px',\n            borderRadius: '5px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n          }}>\n            <Link to=\"/profile\">\n              <button style={{\n                padding: '8px 16px',\n                backgroundColor: '#4CAF50',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}>Profile</button>\n            </Link>\n            <button \n              onClick={handleLogout}\n              style={{\n                padding: '8px 16px',\n                backgroundColor: '#f44336',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >Logout</button>\n          </div>\n\n          <MapErrorBoundary>\n            <div className=\"map-container\">\n              <GoogleMap\n                mapContainerStyle={mapStyles}\n                zoom={13}\n                center={mapCenter}\n                onClick={handleMapClick}\n                onLoad={handleMapLoad}\n                onUnmount={handleMapUnmount}\n                options={{\n                  disableDefaultUI: true,\n                  clickableIcons: false,\n                  mapTypeControl: false,\n                  fullscreenControl: false,\n                  streetViewControl: false\n                }}\n              >\n                {locationData.map(location => (\n                  <Marker\n                    key={location._id}\n                    position={{\n                      lat: location.location.coordinates[1],\n                      lng: location.location.coordinates[0]\n                    }}\n                    onClick={() => handleMarkerClick(location)}\n                  />\n                ))}\n\n                {selectedLocation && !selectedMarker && (\n                  <>\n                    <Marker position={selectedLocation} />\n                    <InfoWindow\n                      position={selectedLocation}\n                      onCloseClick={() => setSelectedLocation(null)}\n                    >\n                      <form onSubmit={handleLocationSubmit}>\n                        <textarea\n                          value={contentForm.text}\n                          onChange={e => setContentForm({ ...contentForm, text: e.target.value })}\n                          placeholder=\"Enter location description\"\n                          style={{ width: '100%', marginBottom: '10px' }}\n                        />\n                        <input\n                          type=\"file\"\n                          multiple\n                          accept=\"image/*,video/*\"\n                          onChange={e => setContentForm({ ...contentForm, media: Array.from(e.target.files) })}\n                        />\n                        <button type=\"submit\">Save Location Data</button>\n                      </form>\n                    </InfoWindow>\n                  </>\n                )}\n\n                {selectedMarker && !selectedLocation && (\n                  <InfoWindow\n                    position={{\n                      lat: selectedMarker.location.coordinates[1],\n                      lng: selectedMarker.location.coordinates[0]\n                    }}\n                    onCloseClick={() => setSelectedMarker(null)}\n                  >\n                    <div>\n                      <p>{selectedMarker.content.text}</p>\n                      {selectedMarker.content.mediaUrls?.map((url, index) => (\n                        <img\n                          key={index}\n                          src={`http://localhost:3000/${url}`}\n                          alt=\"Location media\"\n                          style={{ maxWidth: '200px', marginTop: '10px' }}\n                        />\n                      ))}\n                      {user && selectedMarker.creator._id === user.userId && (\n                        <button \n                          onClick={() => handleDeleteLocation(selectedMarker._id)}\n                          style={{ marginTop: '10px' }}\n                        >\n                          Delete\n                        </button>\n                      )}\n                    </div>\n                  </InfoWindow>\n                )}\n              </GoogleMap>\n            </div>\n          </MapErrorBoundary>\n        </div>\n      )\n    },\n    {\n      path: \"/profile\",\n      element: <ProfilePage user={user} />\n    }\n  ]);\n\n  console.log('States:', { selectedMarker, selectedLocation });\n\n  return (\n    <ErrorBoundary>\n      <GoogleMapsProvider>\n        <RouterProvider router={router} />\n      </GoogleMapsProvider>\n    </ErrorBoundary>\n  );\n}\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Map Error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <div>Something went wrong with the map. Please refresh the page.</div>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default function AppWithErrorBoundary() {\n  return (\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}