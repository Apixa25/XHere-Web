{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\location-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, InfoWindow, Marker } from '@react-google-maps/api';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport ProfilePage from './components/ProfilePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIBRARIES = ['places'];\nfunction App() {\n  _s();\n  var _selectedMarker$creat, _selectedMarker$conte;\n  const [user, setUser] = useState(null);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [locationData, setLocationData] = useState([]);\n  const [contentForm, setContentForm] = useState({\n    text: '',\n    media: []\n  });\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [mapInstance, setMapInstance] = useState(null);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 40.7128,\n    lng: -74.0060\n  });\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n\n  // Fetch locations when user changes\n  useEffect(() => {\n    if (user) {\n      fetchLocations();\n    }\n  }, [user]);\n  const handleAuth = async e => {\n    e.preventDefault();\n    const endpoint = isRegistering ? '/api/auth/register' : '/api/auth/login';\n    try {\n      const response = await fetch(`http://localhost:3000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        if (!isRegistering) {\n          localStorage.setItem('token', data.token);\n          setUser({\n            email: data.user.email,\n            userId: data.user._id.toString()\n          });\n          console.log('Login successful!');\n        } else {\n          setIsRegistering(false);\n          alert('Registration successful! Please login.');\n        }\n      } else {\n        alert(data.error || 'Authentication failed');\n      }\n    } catch (error) {\n      console.error('Auth error:', error);\n      alert('Authentication failed');\n    }\n  };\n  const handleMapClick = event => {\n    if (!user) return;\n    setSelectedLocation({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n  const handleLocationSubmit = async e => {\n    e.preventDefault();\n    if (!selectedLocation || !user) return;\n    const formPayload = new FormData();\n    formPayload.append('latitude', selectedLocation.lat);\n    formPayload.append('longitude', selectedLocation.lng);\n    formPayload.append('text', contentForm.text);\n    contentForm.media.forEach(file => {\n      formPayload.append('media', file);\n    });\n    console.log('Submitting location:', {\n      lat: selectedLocation.lat,\n      lng: selectedLocation.lng,\n      text: contentForm.text,\n      mediaCount: contentForm.media.length\n    });\n    try {\n      const response = await fetch('http://localhost:3000/api/user/locations', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: formPayload\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Server response:', errorText);\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Location created:', data);\n      await fetchLocations();\n      setSelectedLocation(null);\n      setContentForm({\n        text: '',\n        media: []\n      });\n    } catch (error) {\n      console.error('Error submitting location data:', error);\n    }\n  };\n  const fetchLocations = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/user/locations', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLocationData(data);\n    } catch (error) {\n      console.error('Error fetching locations:', error);\n    }\n  };\n  const handleMapLoad = map => {\n    setMapInstance(map);\n  };\n  const handleDeleteLocation = async locationId => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/locations/${locationId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setSelectedMarker(null);\n        fetchLocations();\n      } else {\n        const data = await response.json();\n        alert(data.error || 'Failed to delete location');\n      }\n    } catch (error) {\n      console.error('Error deleting location:', error);\n      alert('Failed to delete location');\n    }\n  };\n  const renderAuthForm = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: '40px auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegistering ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAuth,\n      children: [isRegistering && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.name,\n          onChange: e => setFormData({\n            ...formData,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isRegistering ? 'Register' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsRegistering(!isRegistering),\n        children: isRegistering ? 'Switch to Login' : 'Switch to Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n  if (!user) {\n    return renderAuthForm();\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      libraries: LIBRARIES,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '10px',\n            right: '10px',\n            zIndex: 1,\n            display: 'flex',\n            gap: '10px',\n            background: 'white',\n            padding: '10px',\n            borderRadius: '5px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                padding: '8px 16px',\n                backgroundColor: '#4CAF50',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              localStorage.removeItem('token');\n              setUser(null);\n            },\n            style: {\n              padding: '8px 16px',\n              backgroundColor: '#f44336',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(ProfilePage, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n                mapContainerStyle: mapStyles,\n                zoom: 13,\n                center: mapCenter,\n                onClick: handleMapClick,\n                mapId: process.env.REACT_APP_GOOGLE_MAPS_MAP_ID,\n                options: {\n                  mapId: process.env.REACT_APP_GOOGLE_MAPS_MAP_ID\n                },\n                onLoad: handleMapLoad,\n                onDragEnd: () => {\n                  if (mapInstance) {\n                    const newCenter = mapInstance.getCenter();\n                    setMapCenter({\n                      lat: newCenter.lat(),\n                      lng: newCenter.lng()\n                    });\n                  }\n                },\n                children: [locationData.map(location => /*#__PURE__*/_jsxDEV(Marker, {\n                  position: {\n                    lat: parseFloat(location.location.coordinates[1]),\n                    lng: parseFloat(location.location.coordinates[0])\n                  },\n                  onClick: () => setSelectedMarker(location)\n                }, location._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this)), selectedLocation && /*#__PURE__*/_jsxDEV(Marker, {\n                  position: selectedLocation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n                  position: {\n                    lat: selectedMarker.location.coordinates[1],\n                    lng: selectedMarker.location.coordinates[0]\n                  },\n                  onCloseClick: () => setSelectedMarker(null),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      maxWidth: '200px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Posted by:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 28\n                      }, this), \" \", ((_selectedMarker$creat = selectedMarker.creator.profile) === null || _selectedMarker$creat === void 0 ? void 0 : _selectedMarker$creat.name) || selectedMarker.creator.email]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: selectedMarker.content.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 25\n                    }, this), (_selectedMarker$conte = selectedMarker.content.mediaUrls) === null || _selectedMarker$conte === void 0 ? void 0 : _selectedMarker$conte.map((url, index) => selectedMarker.content.mediaTypes[index].startsWith('image') ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `http://localhost:3000/${url}`,\n                      alt: \"Location media\",\n                      style: {\n                        maxWidth: '100%',\n                        marginTop: '8px'\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n                      src: `http://localhost:3000/${url}`,\n                      controls: true,\n                      style: {\n                        maxWidth: '100%',\n                        marginTop: '8px'\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 29\n                    }, this)), user && selectedMarker.creator._id.toString() === user.userId && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDeleteLocation(selectedMarker._id),\n                      style: {\n                        marginTop: '10px',\n                        backgroundColor: '#ff4444',\n                        color: 'white',\n                        border: 'none',\n                        padding: '5px 10px',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                      },\n                      children: \"Delete Location\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), selectedLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            bottom: '20px',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            backgroundColor: 'white',\n            padding: '20px',\n            borderRadius: '8px',\n            boxShadow: '0 2px 6px rgba(0,0,0,0.3)'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLocationSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: contentForm.text,\n              onChange: e => setContentForm({\n                ...contentForm,\n                text: e.target.value\n              }),\n              placeholder: \"Enter location description\",\n              style: {\n                width: '100%',\n                marginBottom: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              accept: \"image/*,video/*\",\n              onChange: e => setContentForm({\n                ...contentForm,\n                media: Array.from(e.target.files)\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Location Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lVbA1AGTkYHPSdj2pC9s47VEpjk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","InfoWindow","Marker","BrowserRouter","Router","Routes","Route","Link","ProfilePage","jsxDEV","_jsxDEV","LIBRARIES","App","_s","_selectedMarker$creat","_selectedMarker$conte","user","setUser","isRegistering","setIsRegistering","formData","setFormData","email","password","name","selectedLocation","setSelectedLocation","locationData","setLocationData","contentForm","setContentForm","text","media","selectedMarker","setSelectedMarker","mapInstance","setMapInstance","mapCenter","setMapCenter","lat","lng","mapStyles","height","width","fetchLocations","handleAuth","e","preventDefault","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","userId","_id","toString","console","log","alert","error","handleMapClick","event","latLng","handleLocationSubmit","formPayload","FormData","append","forEach","file","mediaCount","length","getItem","errorText","Error","status","handleMapLoad","map","handleDeleteLocation","locationId","renderAuthForm","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","className","position","top","right","zIndex","display","gap","background","borderRadius","boxShadow","to","backgroundColor","color","border","cursor","removeItem","path","element","mapContainerStyle","zoom","center","mapId","REACT_APP_GOOGLE_MAPS_MAP_ID","options","onLoad","onDragEnd","newCenter","getCenter","location","parseFloat","coordinates","onCloseClick","creator","profile","content","mediaUrls","url","index","mediaTypes","startsWith","src","alt","marginTop","controls","bottom","left","transform","placeholder","marginBottom","multiple","accept","Array","from","files","_c","$RefreshReg$"],"sources":["C:/Users/Admin/location-app/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, InfoWindow, Marker } from '@react-google-maps/api';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport ProfilePage from './components/ProfilePage';\n\nconst LIBRARIES = ['places'];\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [locationData, setLocationData] = useState([]);\n  const [contentForm, setContentForm] = useState({\n    text: '',\n    media: []\n  });\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [mapInstance, setMapInstance] = useState(null);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 40.7128,\n    lng: -74.0060\n  });\n\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n\n  // Fetch locations when user changes\n  useEffect(() => {\n    if (user) {\n      fetchLocations();\n    }\n  }, [user]);\n\n  const handleAuth = async (e) => {\n    e.preventDefault();\n    const endpoint = isRegistering ? '/api/auth/register' : '/api/auth/login';\n    \n    try {\n      const response = await fetch(`http://localhost:3000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      \n      const data = await response.json();\n      \n      if (response.ok) {\n        if (!isRegistering) {\n          localStorage.setItem('token', data.token);\n          setUser({ \n            email: data.user.email,\n            userId: data.user._id.toString()\n          });\n          console.log('Login successful!');\n        } else {\n          setIsRegistering(false);\n          alert('Registration successful! Please login.');\n        }\n      } else {\n        alert(data.error || 'Authentication failed');\n      }\n    } catch (error) {\n      console.error('Auth error:', error);\n      alert('Authentication failed');\n    }\n  };\n\n  const handleMapClick = (event) => {\n    if (!user) return;\n    setSelectedLocation({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n\n  const handleLocationSubmit = async (e) => {\n    e.preventDefault();\n    if (!selectedLocation || !user) return;\n\n    const formPayload = new FormData();\n    formPayload.append('latitude', selectedLocation.lat);\n    formPayload.append('longitude', selectedLocation.lng);\n    formPayload.append('text', contentForm.text);\n    contentForm.media.forEach(file => {\n      formPayload.append('media', file);\n    });\n\n    console.log('Submitting location:', {\n      lat: selectedLocation.lat,\n      lng: selectedLocation.lng,\n      text: contentForm.text,\n      mediaCount: contentForm.media.length\n    });\n\n    try {\n      const response = await fetch('http://localhost:3000/api/user/locations', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: formPayload\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Server response:', errorText);\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      console.log('Location created:', data);\n      await fetchLocations();\n      setSelectedLocation(null);\n      setContentForm({ text: '', media: [] });\n    } catch (error) {\n      console.error('Error submitting location data:', error);\n    }\n  };\n\n  const fetchLocations = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/user/locations', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLocationData(data);\n    } catch (error) {\n      console.error('Error fetching locations:', error);\n    }\n  };\n\n  const handleMapLoad = (map) => {\n    setMapInstance(map);\n  };\n\n  const handleDeleteLocation = async (locationId) => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/locations/${locationId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (response.ok) {\n        setSelectedMarker(null);\n        fetchLocations();\n      } else {\n        const data = await response.json();\n        alert(data.error || 'Failed to delete location');\n      }\n    } catch (error) {\n      console.error('Error deleting location:', error);\n      alert('Failed to delete location');\n    }\n  };\n\n  const renderAuthForm = () => (\n    <div style={{ maxWidth: '400px', margin: '40px auto', padding: '20px' }}>\n      <h2>{isRegistering ? 'Register' : 'Login'}</h2>\n      <form onSubmit={handleAuth}>\n        {isRegistering && (\n          <div>\n            <label>Name:</label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={(e) => setFormData({...formData, name: e.target.value})}\n              required\n            />\n          </div>\n        )}\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={formData.email}\n            onChange={(e) => setFormData({...formData, email: e.target.value})}\n            required\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={formData.password}\n            onChange={(e) => setFormData({...formData, password: e.target.value})}\n            required\n          />\n        </div>\n        <button type=\"submit\">{isRegistering ? 'Register' : 'Login'}</button>\n        <button type=\"button\" onClick={() => setIsRegistering(!isRegistering)}>\n          {isRegistering ? 'Switch to Login' : 'Switch to Register'}\n        </button>\n      </form>\n    </div>\n  );\n\n  if (!user) {\n    return renderAuthForm();\n  }\n\n  return (\n    <Router>\n      <LoadScript \n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\n        libraries={LIBRARIES}\n      >\n        <div className=\"app\">\n          <div style={{ \n            position: 'absolute', \n            top: '10px', \n            right: '10px', \n            zIndex: 1,\n            display: 'flex',\n            gap: '10px',\n            background: 'white',\n            padding: '10px',\n            borderRadius: '5px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n          }}>\n            <Link to=\"/profile\">\n              <button style={{\n                padding: '8px 16px',\n                backgroundColor: '#4CAF50',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}>Profile</button>\n            </Link>\n            <button \n              onClick={() => {\n                localStorage.removeItem('token');\n                setUser(null);\n              }}\n              style={{\n                padding: '8px 16px',\n                backgroundColor: '#f44336',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >Logout</button>\n          </div>\n\n          <Routes>\n            <Route path=\"/profile\" element={<ProfilePage user={user} />} />\n            <Route path=\"/\" element={\n              <div className=\"map-container\">\n                <GoogleMap\n                  mapContainerStyle={mapStyles}\n                  zoom={13}\n                  center={mapCenter}\n                  onClick={handleMapClick}\n                  mapId={process.env.REACT_APP_GOOGLE_MAPS_MAP_ID}\n                  options={{\n                    mapId: process.env.REACT_APP_GOOGLE_MAPS_MAP_ID\n                  }}\n                  onLoad={handleMapLoad}\n                  onDragEnd={() => {\n                    if (mapInstance) {\n                      const newCenter = mapInstance.getCenter();\n                      setMapCenter({\n                        lat: newCenter.lat(),\n                        lng: newCenter.lng()\n                      });\n                    }\n                  }}\n                >\n                  {locationData.map(location => (\n                    <Marker\n                      key={location._id}\n                      position={{\n                        lat: parseFloat(location.location.coordinates[1]),\n                        lng: parseFloat(location.location.coordinates[0])\n                      }}\n                      onClick={() => setSelectedMarker(location)}\n                    />\n                  ))}\n                  {selectedLocation && (\n                    <Marker\n                      position={selectedLocation}\n                    />\n                  )}\n                  {selectedMarker && (\n                    <InfoWindow\n                      position={{\n                        lat: selectedMarker.location.coordinates[1],\n                        lng: selectedMarker.location.coordinates[0]\n                      }}\n                      onCloseClick={() => setSelectedMarker(null)}\n                    >\n                      <div style={{ maxWidth: '200px' }}>\n                        <p><strong>Posted by:</strong> {selectedMarker.creator.profile?.name || selectedMarker.creator.email}</p>\n                        <p>{selectedMarker.content.text}</p>\n                        {selectedMarker.content.mediaUrls?.map((url, index) => (\n                          selectedMarker.content.mediaTypes[index].startsWith('image') ? (\n                            <img \n                              key={index}\n                              src={`http://localhost:3000/${url}`}\n                              alt=\"Location media\"\n                              style={{ maxWidth: '100%', marginTop: '8px' }}\n                            />\n                          ) : (\n                            <video \n                              key={index}\n                              src={`http://localhost:3000/${url}`}\n                              controls\n                              style={{ maxWidth: '100%', marginTop: '8px' }}\n                            />\n                          )\n                        ))}\n                        {user && selectedMarker.creator._id.toString() === user.userId && (\n                          <button \n                            onClick={() => handleDeleteLocation(selectedMarker._id)}\n                            style={{ \n                              marginTop: '10px',\n                              backgroundColor: '#ff4444',\n                              color: 'white',\n                              border: 'none',\n                              padding: '5px 10px',\n                              borderRadius: '4px',\n                              cursor: 'pointer'\n                            }}\n                          >\n                            Delete Location\n                          </button>\n                        )}\n                      </div>\n                    </InfoWindow>\n                  )}\n                </GoogleMap>\n              </div>\n            } />\n          </Routes>\n\n          {selectedLocation && (\n            <div style={{ \n              position: 'absolute', \n              bottom: '20px', \n              left: '50%', \n              transform: 'translateX(-50%)',\n              backgroundColor: 'white',\n              padding: '20px',\n              borderRadius: '8px',\n              boxShadow: '0 2px 6px rgba(0,0,0,0.3)'\n            }}>\n              <form onSubmit={handleLocationSubmit}>\n                <textarea\n                  value={contentForm.text}\n                  onChange={e => setContentForm({ ...contentForm, text: e.target.value })}\n                  placeholder=\"Enter location description\"\n                  style={{ width: '100%', marginBottom: '10px' }}\n                />\n                <input\n                  type=\"file\"\n                  multiple\n                  accept=\"image/*,video/*\"\n                  onChange={e => setContentForm({ ...contentForm, media: Array.from(e.target.files) })}\n                />\n                <button type=\"submit\">Save Location Data</button>\n              </form>\n            </div>\n          )}\n        </div>\n      </LoadScript>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}